on:
  push:
    branches:
    - main
    - master
    tags:
    - 'v*'
name: publish Wasm module
jobs:
  build:
    name: Create new release with Wasm artifact
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      REGISTRY_WASM_ARTIFACT_PREFIX: kubewarden/policies
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Prepare Rust environment
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: wasm32-unknown-unknown
      - name: Download wasm-to-oci
        uses: i3h/download-release-asset@v1
        with:
          owner: engineerd
          repo: wasm-to-oci
          tag: v0.1.2
          file: linux-amd64-wasm-to-oci
      - name: fix wasm-to-oci permissions
        run: |
          chmod 755 linux-amd64-wasm-to-oci
      - name: Build Wasm module
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --target=wasm32-unknown-unknown --release
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish Wasm policy artifact to OCI registry with the 'latest' tag
        if: ${{ startsWith(github.ref, 'refs/heads/') }}
        run: |
          ./linux-amd64-wasm-to-oci push target/wasm32-unknown-unknown/release/psp_host_namespaces.wasm ${{ env.REGISTRY }}/${{ env.REGISTRY_WASM_ARTIFACT_PREFIX }}/psp-host-namespaces:latest
      - name: Publish Wasm policy artifact to OCI registry with the version tag and 'latest'
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: |
          export IMAGE_TAG=$(echo $GITHUB_REF | sed -e "s|refs/tags/||")
          ./linux-amd64-wasm-to-oci push target/wasm32-unknown-unknown/release/psp_host_namespaces.wasm ${{ env.REGISTRY }}/${{ env.REGISTRY_WASM_ARTIFACT_PREFIX }}/psp-host-namespaces:${IMAGE_TAG}
      - name: Create Release
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url  }}
          asset_path: target/wasm32-unknown-unknown/release/psp_host_namespaces.wasm
          asset_name: policy.wasm
          asset_content_type: application/wasm
      - name: Notify policy-hub
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: kubewarden/notify-policy-hub@main
        with:
          USERNAME: chimera-kube-bot
          PAT: ${{ secrets.WORKFLOW_PAT }}
